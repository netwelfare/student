学习java大概分为几个阶段：
第一个阶段：开眼界打基础阶段。要边学边开眼界，边开眼界边学。什么算是基础呢？不同眼界的人看到的范围大小是不同的。有的人看到的就是基本的语法和常用的类库使用；有的人看到的常用类的底层实现和效率优劣，还有高级知识与技能的研究。眼光的远近决定着你知识面的深与广，也决定着你的基础打的牢靠不牢靠。开眼界的话，就向身边的高手学习，看看他们学习哪些知识掌握到什么深度。什么算是基础呢？不同的人有不同的看法，可以列出自己想到的几块内容，三四块也好，五六块也好......，然后对比一下，通过对比你就能发现那些属于基础了。
第二个阶段：学习基本的框架。其中又分为两个境界：会使用和懂其底层实现。境界这种东西，不是靠方法和技巧就能获取的，而是靠前期的基础所决定。基础好，这两个境界都能达到；基础不好，那也就只能会用了。别人的指点，远不及内心之所求，只有前期的基础打好了，人就自然而然就不满足于当前会用的状况。很多人会用框架，但是不会去研究框架，就是天天叮咛他去研究框架，他也很难发自肺腑的去研究框架的，效果可想而知了。这种状况，归根结底在于前期的基础没有打好。打基础的时候，他就是只停留在会用的阶段和境界，以后的职业生涯基本不会再有突破到懂其底层实现的境界了。
第三个阶段：信念阶段。对编程和职业生涯有一种信念。这种信念是什么，很难描述。有的可能是将代码写活了，有的可能是想做一款伟大作品的梦想。
这是目前我想到的，你可以参考一下。不确定上述观点是否完全正确，只是有感而发。


当今时代，人类知识的量已经非常大了，以Java为例，诞生于1995年，至今已经走过了21个年头。在这么长的生命周期，仅仅基础知识部分已然变得非常庞大了，比如说：nio，反射，泛型，代理，编码，远程调用，服务，socket等......，知识容易获取，可以看pdf电子书，可以谷歌百度搜索，可以贴吧QQ群提问，可以参加培训找师傅获得指点......，但是知识的掌握却因为知识量的变大而越来越困难，如何事半功倍的学习Java知识成为一个人成功与否的重要区分标准。面对学习知识的困境，我一直在思考，最近提出了一个新的学习观念：Java认知学习方法。虽然被冠以一个新的名称，但是其内含的思想却很朴素。虽然朴素的东西人人都懂，但是真正的做到的并不多。懂和做到，相差十万八千里，而且是两种完全不同的境界，犹如天和地之间的区别一样。这也是就是普通人和高手之间的区别吧。此方法的思想主要基于以下几点：
（1）知识量已经非常庞大，必须具备快速掌握知识的方法，这样才能比别人成长的更快。
（2）知识是分层次的，分为了解，理解，掌握，运用等，并不是所有的知识对你而言都是重要的。
（3）很多时候，我们花费太多的时间在仅仅需要了解，理解层次的知识，而没有抓住需要掌握的知识，导致基础知识掌握不牢靠。
（4）知识背后是有深刻的思维，因为我们没有抓住重点知识，导致重点知识没有足够的时间去理解去体会，所以理解不透彻，不能延伸开来。
此方法的具体操作是：将知识划分层次，针对不同的层次，分配不同的时间去掌握。很简单的一种做法，如果能够坚持的做到，我相信一定能学到更多的东西。